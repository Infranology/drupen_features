<?php

/**
 * @file
 * Drüpen install tasks.
 */

/**
 * Implementation of hook_install().
 */
function drupen_install() {
  // The modules' file contains configuration and installation functions that
  // the others Drüpen modules uses. In a clean install, modules that depends
  // on those functions must be listed after this module (e.g.: drupen_blog).
  drupal_load('module', 'drupen');

  module_load_include('inc', 'drupen', 'includes/drupen.better_formats');
  module_load_include('inc', 'drupen', 'includes/drupen.ckeditor');
  module_load_include('inc', 'drupen', 'includes/drupen.ckeditor_swf');
  module_load_include('inc', 'drupen', 'includes/drupen.comment_notify');
  module_load_include('inc', 'drupen', 'includes/drupen.date_api');
  module_load_include('inc', 'drupen', 'includes/drupen.filter');
  module_load_include('inc', 'drupen', 'includes/drupen.imce');
  module_load_include('inc', 'drupen', 'includes/drupen.nodewords');
  module_load_include('inc', 'drupen', 'includes/drupen.private_download');
  module_load_include('inc', 'drupen', 'includes/drupen.search');
  module_load_include('inc', 'drupen', 'includes/drupen.service_links');
  module_load_include('inc', 'drupen', 'includes/drupen.system');
  module_load_include('inc', 'drupen', 'includes/drupen.taxonomy');
  module_load_include('inc', 'drupen', 'includes/drupen.xmlsitemap');
  module_load_include('inc', 'drupen', 'includes/drupen.user');

  // Creates the user roles.
  $roles = _drupen_user_configure();

  // Configures the input formats.
  _drupen_filter_configure($roles);

  // Configures Better Formats.
  _drupen_better_formats_configure($roles);

  // Configures IMCE.
  _drupen_imce_configure($roles);

  // Configures System (Drupal core).
  _drupen_system_configure();

  // Configures Search (Drupal core).
  _drupen_search_configure();

  // Configures site vocabularies.
  _drupen_taxonomy_configure();

  // Configures CKEditor.
  _drupen_ckeditor_configure();

  // Configures CKEditor SWF.
  _drupen_ckeditor_swf_configure();

  // Configures Comment notify.
  _drupen_comment_notify_configure();

  // Configures Date API.
  _drupen_date_api_configure();

  // Configures Nodewords.
  _drupen_nodewords_configure();

  // Configures Private Download.
  _drupen_private_download_configure();

  // Configures Service Links.
  _drupen_service_links_configure();

  // Configures XMLSitemap.
  _drupen_xmlsitemap_configure();

  // Indexes 20 nodes per cron run.
  variable_set('search_cron_limit', '20');

  // Cache settings.
  variable_set('cache', 1);             // Normal caching module.
  variable_set('cache_lifetime', 0);    // None minimum cache lifetime.
  variable_set('preprocess_css', TRUE); // Optimize CSS files.
  variable_set('preprocess_js', TRUE);  // Optimize JavaScript files.

  // Adds /login as path alias to /user.
  if (module_exists('path')) {
    db_query("INSERT INTO {url_alias} (src, dst) VALUES ('%s', '%s')", 'user', 'login');
  }

  if (module_exists('gravatar')) {
    variable_set('gravatar_default', 6);  // Use Gravatar logo.
    variable_set('gravatar_rating', 'G'); // Only images suitable to any audience.
  }

  // Set support for user pictures in comments.
  $theme_settings = variable_get('theme_settings', array());
  $theme_settings['toggle_comment_user_picture'] = TRUE;
  variable_set('theme_settings', $theme_settings);

  // Makes heavier since we change the default message for new installations.
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'drupen'");
}

/**
 * Update 6001: updates the CKEditor "Drupen" toolbar.
 */
function drupen_update_6001() {
  module_load_include('inc', 'drupen', 'includes/drupen.ckeditor');

  $settings_definitions = _drupen_ckeditor_settings_definitions();
  $toolbar = $settings_definitions['Default']['toolbar'];

  $result = db_query("SELECT * FROM {ckeditor_settings} WHERE name <> 'CKEditor Global Profile'");

  $ret = array();
  while (($profile = db_fetch_object($result))) {
    $name = $profile->name;
    $settings = unserialize($profile->settings);

    // The ckeditor module is bootstrapped before the drupen module. Then it
    // can unset the the "Drupen" toolbar. If the CKEditor profile is named
    // "Default" and the toolbar is empty, will set the Drupen toolbar into it.
    if (
      'Drupen' === $settings['toolbar'] ||
      ('Default' === $name && '' === $settings['toolbar'])
    ) {
      $settings['toolbar'] = $toolbar;
      $settings = serialize($settings);

      $return = db_query("UPDATE {ckeditor_settings} SET settings = '%s' WHERE name = '%s'", $settings, $name);

      $ret[] = array(
        'success' => $return !== FALSE,
        'query'   => sprintf('Updated the CKEditor profile "%s" "Drupen" toolbar configuration.', $name)
      );
    }
  }

  if (0 === count($ret)) {
    $ret[] = array(
      'success' => FALSE,
      'query'   => 'Could not find an eligible CKEditor profile to update the "Drupen" toolbar configuration. Please, update the toolbar manually.',
    );
  }

  return $ret;
}

/**
 * Update 6002: updates paths configuration.
 *
 * This update is due the changed paths to the modules, themes and libraries
 * directories from the 6.x-1.0 to the 6.x-1.1 version.
 */
function drupen_update_6002() {
  $ret1 = _drupen_update_6002_ckeditor_update();
  $ret2 = _drupen_update_6002_imce_update();
  $ret3 = _drupen_update_6002_variable_update();

  return array_merge($ret1, $ret2, $ret3);
}

function _drupen_update_6002_ckeditor_update() {
  module_load_include('inc', 'drupen', 'includes/drupen.ckeditor');
  $settings_definitions = _drupen_ckeditor_settings_definitions();

  $ckeditor_update_settings = array(
    'CKEditor Global Profile' => array(
      'ckeditor_path' => array(
        'original' => '%b/profiles/drupen/libraries/ckeditor',
        'update'   => '%b/' . libraries_get_path('ckeditor', FALSE)
      ),
    ),

    'Default' => array(
      'css_path' => array(
        'original' => '%hprofiles/drupen/modules/drupen/drupen/assets/css/drupen-ckeditor.css',
        'update'   => $settings_definitions['Default']['css_path'],
      ),
      'styles_path' => array(
        'original' => '%hprofiles/drupen/modules/drupen/drupen/assets/js/ckeditor.styles.js',
        'update'   => $settings_definitions['Default']['styles_path'],
      ),
      'config_js_path' => array(
        'original' => '%hprofiles/drupen/modules/drupen/drupen/assets/js/ckeditor.config.js',
        'update'   => $settings_definitions['Default']['config_js_path'],
      ),

      'loadPlugins' => array(
        'ckeditor_link' => array(
          'original' => array(
            'name' => 'drupal_path',
            'desc' => 'Support for CKEditor Link module',
            'path' => '%base_path%profiles/drupen/modules/contrib/ckeditor_link/plugins/link/',
            'default' => 't',
          ),
          'update' => $settings_definitions['Default']['loadPlugins']['ckeditor_link'],
        ),
        'ckeditor_swf' => array(
          'original' => array(
            'name' => 'swf',
            'desc' => 'Support for CKEditor SWF module',
            'path' => '%base_path%profiles/drupen/modules/contrib/ckeditor_swf/plugins/swf/',
            'default' => 't',
          ),
          'update' => $settings_definitions['Default']['loadPlugins']['ckeditor_swf'],
        ),
      ),
    ),
  );

  $result = db_query("SELECT * FROM {ckeditor_settings} WHERE name IN ('CKEditor Global Profile', 'Default')");

  $ret = array();
  while (($profile = db_fetch_object($result))) {
    $name = $profile->name;
    $settings = unserialize($profile->settings);

    _drupen_update_6002_ckeditor_settings_update($settings, $ckeditor_update_settings[$name]);

    $settings = serialize($settings);
    $return = db_query("UPDATE {ckeditor_settings} SET settings = '%s' WHERE name = '%s'", $settings, $name);

    $ret[] = array(
      'success' => $return !== FALSE,
      'query'   => sprintf('Updated CKEditor profile "%s" paths.', $name)
    );
  }

  return $ret;
}

function _drupen_update_6002_ckeditor_settings_update(array &$original_settings, array $update_settings) {
  foreach ($update_settings as $key => $value) {
    if (
      !array_key_exists('original', $value) &&
      !array_key_exists('update', $value) &&
      is_array($value)
    ) {
      _drupen_update_6002_ckeditor_settings_update($original_settings[$key], $value);
      continue;
    }

    if ($original_settings[$key] === $value['original']) {
      $original_settings[$key] = $value['update'];
    }
  }
}

function _drupen_update_6002_imce_update() {
  $imce_profiles = variable_get('imce_profiles', array());
  $updated = array();

  if (isset($imce_profiles[1]['name']) && 'Admin user' === $imce_profiles[1]['name']) {
    $expected = array(
      'uploads',
      'php: return \'uploads/users/\'.$user->name;',
      'imagecache'
    );

    $directory = array(
      'name' => 'uploads/shared',
      'subnav' => 1,
      'browse' => 1,
      'upload' => 1,
      'thumb' => 1,
      'delete' => 1,
      'resize' => 1,
      'mkdir' => 1,
      'rmdir' => 1,
    );

    $updated[] = _drupen_update_6002_imce_directories_update(
      $imce_profiles[1]['directories'], $expected, $directory, 'uploads'
    );
  }

  if (isset($imce_profiles[2]['name']) && 'Authenticated user' === $imce_profiles[2]['name']) {
    $expected = array(
      'uploads/shared',
      'php: return \'uploads/users/\'.$user->name;',
      'imagecache'
    );

    $directory = array(
      'name' => 'uploads',
      'subnav' => 1,
      'browse' => 1,
      'upload' => 0,
      'thumb' => 0,
      'delete' => 0,
      'resize' => 0,
      'mkdir' => 0,
      'rmdir' => 0,
    );

    $updated[] = _drupen_update_6002_imce_directories_update(
      $imce_profiles[2]['directories'], $expected, $directory, 'private'
    );
  }

  if (FALSE !== array_search(TRUE, $updated, TRUE)) {
    variable_set('imce_profiles', $imce_profiles);

    $success = TRUE;
    $query   = 'Updated the IMCE profiles directories permissions.';
  } else {
    $success = FALSE;
    $query   = 'Could not update the IMCE profiles directories permissions since they changed from the original configuration.';
  }

  return array(array(
    'success' => $success,
    'query'   => $query,
  ));
}

function _drupen_update_6002_imce_directories_update(
  array &$directories, array $expected, array $directory, $after = NULL
) {
  if (module_exists('private_download')) {
    $expected = array_merge(
      array(variable_get('private_download_directory', 'private')),
      $expected
    );
  }

  $check = array();
  $position = NULL;
  foreach ($directories as $key => $settings) {
    $check[] = $settings['name'];

    if ($after === $settings['name']) {
      $position = $key;
    }
  }

  if ($check === $expected) {
    if (NULL === $position) {
      array_unshift($directories, $directory);
    } else {
      $directories = array_merge(
        array_slice($directories, 0, $position + 1),
        array($directory),
        array_slice($directories, $position + 1)
      );
    }

    return TRUE;
  }

  return FALSE;
}

function _drupen_update_6002_variable_update() {
  $variables = array(
    // drupen.ckeditor_swf.inc
    'ckeditor_swf_players' => array(
      'original' => array(
        'audio/mpeg' => array(
          'path'          => 'profiles/drupen/libraries/players/audio-player/player.swf',
          'offsetHeight'  => 0,
          'fileName'      => 'soundFile',
          'defaultWidth'  => 290,
          'defaultHeight' => 24,
        ),
      ),
      'update'   => array(
        'audio/mpeg' => array(
          'path'          => libraries_get_path('players') . '/audio-player/player.swf',
          'offsetHeight'  => 0,
          'fileName'      => 'soundFile',
          'defaultWidth'  => 290,
          'defaultHeight' => 24,
        ),
      ),
    ),
    'getid3_path' => array(
      'original' => 'profiles/drupen/libraries/getid3/getid3',
      'update'   => libraries_get_path('getid3') . '/getid3',
    ),

    // drupen.service_links.inc
    'service_links_path_icons' => array(
      'original' => 'profiles/drupen/modules/contrib/service_links/images',
      'update'   => drupal_get_path('module', 'service_links') . '/images',
    ),
  );

  return drupen_variable_update($variables);
}
